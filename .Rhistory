par(mfrow=c(5,3))
for (i in unique(df$siteName)) {
plot(df[df$siteName==i,]$Date, df[df$siteName==i,]$PM2.5, type = "l",
main = i, xlab = "", ylab = "PM2.5")
#print(ggplot(df[df$siteName==i,], aes(x=Date, y=PM2.5)) + geom_line() + scale_x_date(date_labels = "%Y"))
}
par(mar=c(2,2,2,2))
par(mfrow=c(5,3))
for (i in unique(df$siteName)) {
plot(df[df$siteName==i,]$Date, df[df$siteName==i,]$PM2.5, type = "l",
main = i, xlab = "", ylab = "PM2.5")
}
par(mar=c(2,2,2,2))
par(mfrow=c(5,3))
for (i in unique(df$siteName)) {
plot(df[df$siteName==i,]$Date, df[df$siteName==i,]$PM2.5, type = "l",
main = i, xlab = "", ylab = "PM2.5")
}
par(mar=c(2,2,2,2))
par(mfrow=c(5,3))
for (i in unique(df$siteName)) {
plot(df[df$siteName==i,]$Date, df[df$siteName==i,]$PM2.5, type = "l",
main = i, xlab = "", ylab = "PM2.5")
}
par(mar=c(2,2,2,2))
par(mfrow=c(5,3))
for (i in unique(df$siteName)) {
plot(df[df$siteName==i,]$Date, df[df$siteName==i,]$PM2.5, type = "l",
main = i, xlab = "", ylab = "")
}
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
# Importing libraries
library(tidyverse)
library(dplyr)
library(ggplot2)
library(TSstudio)
library(plotly)
# Reading the data into data frame
df <- read.csv("delhi.csv", header = TRUE)
set.seed(5)
df[sample(nrow(df), 5), ]
# Variables in the data
names(df)
# Dimension of the data
dim(df)
# Variable types
# Note the Date column has type chr which must be converted to date type.
str(df)
df$Date <- as.Date(df$Date)
df[sample(nrow(df), 5), ]
str(df)
unique(df$siteName)
par(mfrow = c(2,3))
hist(df[df$siteCode==1420,]$PM2.5, probability = TRUE, main = "", xlab = "PM2.5", ylab = "")
hist(df[df$siteCode==1420,]$PM10, probability = TRUE, main = "Ashok Vihar", xlab = "PM10", ylab = "")
hist(df[df$siteCode==1420,]$NO2, probability = TRUE, main = "", xlab = "NO2", ylab = "")
hist(df[df$siteCode==1420,]$NH3, probability = TRUE, main = "", xlab = "NH3", ylab = "")
hist(df[df$siteCode==1420,]$SO2, probability = TRUE, main = "", xlab = "SO2", ylab = "")
hist(df[df$siteCode==1420,]$Ozone, probability = TRUE, main = "", xlab = "Ozone", ylab = "")
par(mar=c(2,2,2,2))
par(mfrow=c(5,3))
for (i in unique(df$siteName)) {
plot(df[df$siteName==i,]$Date, df[df$siteName==i,]$PM2.5, type = "l",
main = i, xlab = "", ylab = "")
}
par(mar=c(2,2,2,2))
par(mfrow=c(5,2))
for (i in unique(df$siteName)) {
plot(df[df$siteName==i,]$Date, df[df$siteName==i,]$PM2.5, type = "l",
main = i, xlab = "", ylab = "")
}
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
# Importing libraries
library(tidyverse)
library(dplyr)
library(ggplot2)
library(TSstudio)
library(plotly)
# Reading the data into data frame
df <- read.csv("delhi.csv", header = TRUE)
set.seed(5)
df[sample(nrow(df), 5), ]
# Variables in the data
names(df)
# Dimension of the data
dim(df)
# Variable types
# Note the Date column has type chr which must be converted to date type.
str(df)
df$Date <- as.Date(df$Date)
df[sample(nrow(df), 5), ]
str(df)
unique(df$siteName)
par(mfrow = c(2,3))
hist(df[df$siteCode==1420,]$PM2.5, probability = TRUE, main = "", xlab = "PM2.5", ylab = "")
hist(df[df$siteCode==1420,]$PM10, probability = TRUE, main = "Ashok Vihar", xlab = "PM10", ylab = "")
hist(df[df$siteCode==1420,]$NO2, probability = TRUE, main = "", xlab = "NO2", ylab = "")
hist(df[df$siteCode==1420,]$NH3, probability = TRUE, main = "", xlab = "NH3", ylab = "")
hist(df[df$siteCode==1420,]$SO2, probability = TRUE, main = "", xlab = "SO2", ylab = "")
hist(df[df$siteCode==1420,]$Ozone, probability = TRUE, main = "", xlab = "Ozone", ylab = "")
par(mar=c(2,2,2,2))
par(mfrow=c(5,2))
for (i in unique(df$siteName)) {
plot(df[df$siteName==i,]$Date, df[df$siteName==i,]$PM2.5, type = "l",
main = i, xlab = "", ylab = "")
}
par(mar=c(2,2,2,2))
par(mfrow=c(5,2))
for (i in unique(df$siteName)) {
plot(df[df$siteName==i,]$Date, df[df$siteName==i,]$PM10, type = "l",
main = i, xlab = "", ylab = "")
}
par(mar=c(2,2,2,2))
par(mfrow=c(5,2))
for (i in unique(df$siteName)) {
plot(df[df$siteName==i,]$Date, df[df$siteName==i,]$NO2, type = "l",
main = i, xlab = "", ylab = "")
}
par(mar=c(2,2,2,2))
par(mfrow=c(5,2))
for (i in unique(df$siteName)) {
plot(df[df$siteName==i,]$Date, df[df$siteName==i,]$NH3, type = "l",
main = i, xlab = "", ylab = "")
}
par(mar=c(2,2,2,2))
par(mfrow=c(5,2))
for (i in unique(df$siteName)) {
plot(df[df$siteName==i,]$Date, df[df$siteName==i,]$SO2, type = "l",
main = i, xlab = "", ylab = "")
}
par(mar=c(2,2,2,2))
par(mfrow=c(5,2))
for (i in unique(df$siteName)) {
plot(df[df$siteName==i,]$Date, df[df$siteName==i,]$Ozone, type = "l",
main = i, xlab = "", ylab = "")
}
# Reading the data into data frame
df <- read.csv("delhi.csv", header = TRUE)
set.seed(27)
df[sample(nrow(df), 5), ]
# Reading the data into data frame
df <- read.csv("delhi.csv", header = TRUE)
set.seed(101)
df[sample(nrow(df), 5), ]
install.packages("knitr")
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
# Importing libraries
library(tidyverse)
library(dplyr)
library(ggplot2)
library(knitr)
# Reading the data into data frame
df <- read.csv("delhi.csv", header = TRUE)
set.seed(101)
df[sample(nrow(df), 5), ]
knitr::kable(head(df[, 1:4]), "latex")
knitr::kable(head(df[, 1:4]), "html")
knitr::kable(head(df[,:]), "html")
knitr::kable(head(df[,1:]), "html")
knitr::kable(head(df[,]), "html")
knitr::kable(head(df[,]), "latex")
knitr::kable(head(df[,]), "simple")
knitr::kable(head(df), "simple")
knitr::kable(head(df))
d[rbind(c(1, 1), c(2, 3), c(3, 2))] <- NA
d <- cbind(X1 = runif(3), X2 = 10^c(3, 5, 7), X3 = rnorm(3,
0, 1000))
d[rbind(c(1, 1), c(2, 3), c(3, 2))] <- NA
knitr::kable(d)  # NA is displayed by default
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
# Reading the data into data frame
df <- read.csv("delhi.csv", header = TRUE)
set.seed(101)
df[sample(nrow(df), 5), ]
# Variables in the data
names(df)
# Reading the data into data frame
df <- read.csv("delhi.csv", header = TRUE)
set.seed(101)
df[sample(nrow(df), 5), ]
# Reading the data into data frame
df <- read.csv("delhi.csv", header = TRUE)
set.seed(101)
df[sample(nrow(df), 5), ]
# Reading the data into data frame
df <- read.csv("delhi.csv", header = TRUE)
set.seed(101)
df[sample(nrow(df), 5), ]
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
# Importing libraries
library(tidyverse)
library(dplyr)
library(ggplot2)
library(knitr)
# Reading the data into data frame
df <- read.csv("delhi.csv", header = TRUE)
set.seed(101)
df[sample(nrow(df), 5), ]
# Variables in the data
names(df)
# Variables in the data
names(df)
# Variables in the data
names(df)
unique(df$siteName)
unique(df$siteName), unique(df$siteCode)
unique(df$siteName)
unique(df$siteCode)
```{=tex}
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
# Dimension of the data
dim(df)
# Variable types
# Note the Date column has type chr which must be converted to date type.
str(df)
df$Date <- as.Date(df$Date)
df[sample(nrow(df), 5), ]
# Importing libraries
library(tidyverse)
library(dplyr)
library(ggplot2)
library(knitr)
# Reading the data into data frame
df <- read.csv("delhi.csv", header = TRUE)
set.seed(101)
df[sample(nrow(df), 5), ]
# Variable types
# Note the Date column has type chr which must be converted to date type.
str(df)
# Importing libraries
library(tidyverse)
library(dplyr)
library(ggplot2)
library(knitr)
# Reading the data into data frame
df <- read.csv("delhi.csv", header = TRUE)
set.seed(101)
df[sample(nrow(df), 5), ]
# Variable types
# Note the Date column has type chr which must be converted to date type.
str(df)
# Importing libraries
library(tidyverse)
library(dplyr)
library(ggplot2)
library(knitr)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
# Importing libraries
library(tidyverse)
library(dplyr)
library(ggplot2)
library(knitr)
df <- read.csv("delhi.csv", header = TRUE)
set.seed(101)
df[sample(nrow(df), 5), ]
str(df)
#Changing Date dtype from chr to date
df$Date <- as.Date(df$Date)
head(df)
par(mfrow = c(2,3))
hist(df[df$siteCode==1420,]$PM2.5, probability = TRUE, main = "", xlab = "PM2.5", ylab = "")
hist(df[df$siteCode==1420,]$PM10, probability = TRUE, main = "Ashok Vihar", xlab = "PM10", ylab = "")
hist(df[df$siteCode==1420,]$NO2, probability = TRUE, main = "", xlab = "NO2", ylab = "")
hist(df[df$siteCode==1420,]$NH3, probability = TRUE, main = "", xlab = "NH3", ylab = "")
hist(df[df$siteCode==1420,]$SO2, probability = TRUE, main = "", xlab = "SO2", ylab = "")
hist(df[df$siteCode==1420,]$Ozone, probability = TRUE, main = "", xlab = "Ozone", ylab = "")
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
# We read our data into a data frame
# library(bookdown)
df <- read.csv("final_delhi_data.csv", header = TRUE)
df
# Importing libraries
library(tidyverse)
library(dplyr)
library(ggplot2)
library(knitr)
library(reshape2)
# We read our data into a data frame
# library(bookdown)
df <- read.csv("final_delhi_data.csv", header = TRUE)
df
cor_df <- abs(round(cor(df[4:9]), 2))
melted_cor <- melt(cor_df)
ggplot(data = melted_cor, aes(x=Var1, y=Var2, fill=value)) +
geom_tile() +
geom_text(aes(Var2, Var1, label = value), size = 5) +
scale_fill_gradient2(low = "lightgrey", high = "darkgrey",
limit = c(0,1), name="Absolute\nCorrelation\n") +
theme(axis.title.x = element_blank(), axis.title.y = element_blank(),
axis.text.x = element_text(size=12), axis.text.y = element_text(size=12),
panel.background = element_blank())
cor_df <- abs(round(cor(df[4:9]), 2))
melted_cor <- melt(cor_df)
ggplot(data = melted_cor, aes(x=Var1, y=Var2, fill=value)) +
geom_tile() +
geom_text(aes(Var2, Var1, label = value), size = 4) +
scale_fill_gradient2(low = "lightgrey", high = "darkgrey",
limit = c(0,1), name="Absolute\nCorrelation\n") +
theme(axis.title.x = element_blank(), axis.title.y = element_blank(),
axis.text.x = element_text(size=12), axis.text.y = element_text(size=12),
panel.background = element_blank())
cor_df <- abs(round(cor(df[4:9]), 2))
melted_cor <- melt(cor_df)
ggplot(data = melted_cor, aes(x=Var1, y=Var2, fill=value)) +
geom_tile() +
geom_text(aes(Var2, Var1, label = value), size = 4) +
scale_fill_gradient2(low = "lightgrey", high = "darkgrey",
limit = c(0,1), name="Absolute\nCorrelation\n") +
theme(axis.title.x = element_blank(), axis.title.y = element_blank(),
axis.text.x = element_text(size=12), axis.text.y = element_text(size=12),
panel.background = element_blank())
par(mar=c(2,2,2,2))
par(mfrow=c(5,2))
for (i in unique(df$siteName)) {
plot(df[df$siteName==i,]$Date, df[df$siteName==i,]$AQI, type = "l",
main = i, xlab = "", ylab = "", ylim = c(0,700))
}
par(mar=c(2,2,2,2))
par(mfrow=c(5,2))
for (i in unique(df$siteName)) {
plot(df[df$siteName==i,]$Date, df[df$siteName==i,]$AQI, type = "l",
main = i, xlab = "", ylab = "")
}
par(mar=c(2,2,2,2))
par(mfrow=c(5,2))
for (i in unique(df$siteName)) {
plot(df[df$siteName==i,]$Date, df[df$siteName==i,]$AQI, type = "l",
main = i, xlab = "", ylab = "", xlim = NULL)
}
par(mar=c(2,2,2,2))
par(mfrow=c(5,2))
for (i in unique(df$siteName)) {
plot(df[df$siteName==i,]$Date, df[df$siteName==i,]$PM2.5, type = "l",
main = i, xlab = "", ylab = "", ylim = c(0,700))
}
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
# Importing libraries
library(tidyverse)
library(dplyr)
library(ggplot2)
library(knitr)
library(reshape2)
# We read our data into a data frame
# library(bookdown)
df <- read.csv("final_delhi_data.csv", header = TRUE)
#Changing Date data type from chr to date
df$Date <- as.Date(df$Date)
par(mfrow = c(2,3))
hist(df$PM2.5, probability = TRUE, main = "", xlab = "PM2.5", ylab = "")
hist(df$PM10, probability = TRUE, main = "", xlab = "PM10", ylab = "")
hist(df$NO2, probability = TRUE, main = "", xlab = "NO2", ylab = "")
hist(df$NH3, probability = TRUE, main = "", xlab = "NH3", ylab = "")
hist(df$SO2, probability = TRUE, main = "", xlab = "SO2", ylab = "")
hist(df$Ozone, probability = TRUE, main = "", xlab = "Ozone", ylab = "")
pairs(~ PM2.5 + PM10 + NO2 + NH3 + SO2  +Ozone, data = df[df$siteName=="Rohini",], pch=20,
col = rgb(0, 0, 0, 0.15))
cor_df <- abs(round(cor(df[4:9]), 2))
melted_cor <- melt(cor_df)
ggplot(data = melted_cor, aes(x=Var1, y=Var2, fill=value)) +
geom_tile() +
geom_text(aes(Var2, Var1, label = value), size = 4) +
scale_fill_gradient2(low = "lightgrey", high = "darkgrey",
limit = c(0,1), name="Absolute\nCorrelation\n") +
theme(axis.title.x = element_blank(), axis.title.y = element_blank(),
axis.text.x = element_text(size=12), axis.text.y = element_text(size=12),
panel.background = element_blank())
x = df$PM2.5
y = df$PM10
plot(df$PM2.5, df$PM10, pch=20,col = rgb(0, 0, 0, 0.15), main = "", xlab = "PM2.5", ylab = "PM10")
abline(lm(y ~ x, data = df), col = "red", lw = 2, lty=6)
par(mar=c(2,2,2,2))
par(mfrow=c(5,2))
for (i in unique(df$siteName)) {
plot(df[df$siteName==i,]$Date, df[df$siteName==i,]$PM2.5, type = "l",
main = i, xlab = "", ylab = "", ylim = c(0,700))
}
par(mar=c(2,2,2,2))
par(mfrow=c(5,2))
for (i in unique(df$siteName)) {
plot(df[df$siteName==i,]$Date, df[df$siteName==i,]$AQI, type = "l",
main = i, xlab = "", ylab = "", ylim = c(0,700))
}
plot(df[df$siteName==i,]$Date, df[df$siteName==i,]$AQI, type = "l",
main = i, xlab = "", ylab = "", ylim = c(0,800))
par(mar=c(2,2,2,2))
par(mfrow=c(5,2))
for (i in unique(df$siteName)) {
plot(df[df$siteName==i,]$Date, df[df$siteName==i,]$AQI, type = "l",
main = i, xlab = "", ylab = "", ylim = c(0,800))
}
par(mar=c(2,2,2,2))
par(mfrow=c(5,2))
for (i in unique(df$siteName)) {
plot(df[df$siteName==i,]$Date, df[df$siteName==i,]$AQI, type = "l",
main = i, xlab = "", ylab = "", ylim = c(900))
}
par(mar=c(2,2,2,2))
par(mfrow=c(5,2))
for (i in unique(df$siteName)) {
plot(df[df$siteName==i,]$Date, df[df$siteName==i,]$AQI, type = "l",
main = i, xlab = "", ylab = "", ylim = c(0,900))
}
plot(mydata$Mean, mydata$log2FoldChange, cex=0.3, pch=20, col=ifelse(mydatar$foldChange>2 & mydata$padj<0.05, "red", ifelse(mydata$foldChange<0.2 & mydata$padj<0.05, "blue", "black")), log="x")
par(mar=c(2,2,2,2))
par(mfrow=c(5,2))
for (i in unique(df$siteName)) {
x0 = df[df$siteName==i,]$Date
y0 = df[df$siteName==i,]$PM2.5
x1 = x0+1
y1 = y0[2:length(y0)]
cond1 = ((x0>as.Date("2018-10-15") & x0<as.Date("2019-02-15")))
cond2 = ((x0>as.Date("2019-10-15") & x0<as.Date("2020-02-15")))
cond3 = ((x0>as.Date("2020-10-15")))
colour1 <- ifelse((cond1 | cond2 | cond3),"red", "black")
colour2 <- ifelse((cond1 | cond2 | cond3),ifelse(y0>290, "red", "yellow"), "black")
# col=ifelse(mydatar$foldChange>2 & mydata$padj<0.05, "red", ifelse(mydata$foldChange<0.2 & mydata$padj<0.05, "blue", "black"), log="x")
plot(x0, y0, type="n", main = i, xlab = "", ylab = "", ylim = c(0,700), lwd.ticks=2)
segments(x0 = x0, y0 = y0, x1 = x1, y1 = y1, col = colour2)
axis(1, at = as.Date("2018-10-15"), labels = "Oct", lwd.ticks=2)
axis(1, at = as.Date("2019-10-15"), labels = "Oct", lwd.ticks=2)
axis(1, at = as.Date("2020-10-15"), labels = "Oct", lwd.ticks=2)
axis(1, at = as.Date("2019-02-15"), labels = "Feb", lwd.ticks=2)
axis(1, at = as.Date("2020-02-15"), labels = "Feb", lwd.ticks=2)
}
par(mar=c(2,2,2,2))
par(mfrow=c(5,2))
for (i in unique(df$siteName)) {
x0 = df[df$siteName==i,]$Date
y0 = df[df$siteName==i,]$PM2.5
x1 = x0+1
y1 = y0[2:length(y0)]
cond1 = ((x0>as.Date("2018-10-15") & x0<as.Date("2019-02-15")))
cond2 = ((x0>as.Date("2019-10-15") & x0<as.Date("2020-02-15")))
cond3 = ((x0>as.Date("2020-10-15")))
colour1 <- ifelse((cond1 | cond2 | cond3),"red", "black")
colour2 <- ifelse((cond1 | cond2 | cond3),ifelse(y0>290, "red", "orange"), "black")
# col=ifelse(mydatar$foldChange>2 & mydata$padj<0.05, "red", ifelse(mydata$foldChange<0.2 & mydata$padj<0.05, "blue", "black"), log="x")
plot(x0, y0, type="n", main = i, xlab = "", ylab = "", ylim = c(0,700), lwd.ticks=2)
segments(x0 = x0, y0 = y0, x1 = x1, y1 = y1, col = colour2)
axis(1, at = as.Date("2018-10-15"), labels = "Oct", lwd.ticks=2)
axis(1, at = as.Date("2019-10-15"), labels = "Oct", lwd.ticks=2)
axis(1, at = as.Date("2020-10-15"), labels = "Oct", lwd.ticks=2)
axis(1, at = as.Date("2019-02-15"), labels = "Feb", lwd.ticks=2)
axis(1, at = as.Date("2020-02-15"), labels = "Feb", lwd.ticks=2)
}
par(mar=c(2,2,2,2))
par(mfrow=c(5,2))
for (i in unique(df$siteName)) {
x0 = df[df$siteName==i,]$Date
y0 = df[df$siteName==i,]$PM2.5
x1 = x0+1
y1 = y0[2:length(y0)]
cond1 = ((x0>as.Date("2018-10-15") & x0<as.Date("2019-02-15")))
cond2 = ((x0>as.Date("2019-10-15") & x0<as.Date("2020-02-15")))
cond3 = ((x0>as.Date("2020-10-15")))
colour1 <- ifelse((cond1 | cond2 | cond3),"red", "black")
colour2 <- ifelse((cond1 | cond2 | cond3),ifelse(y0>290, "red", "darkorange"), "black")
# col=ifelse(mydatar$foldChange>2 & mydata$padj<0.05, "red", ifelse(mydata$foldChange<0.2 & mydata$padj<0.05, "blue", "black"), log="x")
plot(x0, y0, type="n", main = i, xlab = "", ylab = "", ylim = c(0,700), lwd.ticks=2)
segments(x0 = x0, y0 = y0, x1 = x1, y1 = y1, col = colour2)
axis(1, at = as.Date("2018-10-15"), labels = "Oct", lwd.ticks=2)
axis(1, at = as.Date("2019-10-15"), labels = "Oct", lwd.ticks=2)
axis(1, at = as.Date("2020-10-15"), labels = "Oct", lwd.ticks=2)
axis(1, at = as.Date("2019-02-15"), labels = "Feb", lwd.ticks=2)
axis(1, at = as.Date("2020-02-15"), labels = "Feb", lwd.ticks=2)
}
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
par(mar=c(2,2,2,2))
par(mfrow=c(5,2))
for (i in unique(df$siteName)) {
x0 = df[df$siteName==i,]$Date
y0 = df[df$siteName==i,]$PM2.5
x1 = x0+1
y1 = y0[2:length(y0)]
cond1 = ((x0>as.Date("2018-10-15") & x0<as.Date("2019-02-15")))
cond2 = ((x0>as.Date("2019-10-15") & x0<as.Date("2020-02-15")))
cond3 = ((x0>as.Date("2020-10-15")))
colour1 <- ifelse((cond1 | cond2 | cond3),"red", "black")
colour2 <- ifelse((cond1 | cond2 | cond3),ifelse(y0>290, "red", "darkorange"), ifelse(y0>290, "red", "black"))
plot(x0, y0, type="n", main = i, xlab = "", ylab = "", ylim = c(0,700), lwd.ticks=2)
segments(x0 = x0, y0 = y0, x1 = x1, y1 = y1, col = colour2)
axis(1, at = as.Date("2018-10-15"), labels = "Oct", lwd.ticks=2)
axis(1, at = as.Date("2019-10-15"), labels = "Oct", lwd.ticks=2)
axis(1, at = as.Date("2020-10-15"), labels = "Oct", lwd.ticks=2)
axis(1, at = as.Date("2019-02-15"), labels = "Feb", lwd.ticks=2)
axis(1, at = as.Date("2020-02-15"), labels = "Feb", lwd.ticks=2)
}
par(mar=c(2,2,2,2))
par(mfrow=c(5,2))
for (i in unique(df$siteName)) {
x0 = df[df$siteName==i,]$Date
y0 = df[df$siteName==i,]$PM2.5
x1 = x0+1
y1 = y0[2:length(y0)]
cond1 = ((x0>as.Date("2018-10-15") & x0<as.Date("2019-02-15")))
cond2 = ((x0>as.Date("2019-10-15") & x0<as.Date("2020-02-15")))
cond3 = ((x0>as.Date("2020-10-15")))
colour1 <- ifelse((cond1 | cond2 | cond3),"red", "black")
colour2 <- ifelse((cond1 | cond2 | cond3),ifelse(y0>290, "red", "darkorange"),
ifelse(y0>300, "red", "black"))
plot(x0, y0, type="n", main = i, xlab = "", ylab = "", ylim = c(0,700), lwd.ticks=2)
segments(x0 = x0, y0 = y0, x1 = x1, y1 = y1, col = colour2)
axis(1, at = as.Date("2018-10-15"), labels = "Oct", lwd.ticks=2)
axis(1, at = as.Date("2019-10-15"), labels = "Oct", lwd.ticks=2)
axis(1, at = as.Date("2020-10-15"), labels = "Oct", lwd.ticks=2)
axis(1, at = as.Date("2019-02-15"), labels = "Feb", lwd.ticks=2)
axis(1, at = as.Date("2020-02-15"), labels = "Feb", lwd.ticks=2)
}
x = df$PM2.5
y = df$PM10
plot(df$PM2.5, df$PM10, pch=20,col = rgb(0, 0, 0, 0.15), main = "", xlab = "PM2.5", ylab = "PM10")
abline(lm(y ~ x, data = df), col = "red", lw = 2, lty=6)
